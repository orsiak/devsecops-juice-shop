name: DevSecOps Pipeline

on:
  push:
    branches:
      - main
  pull_request:


permissions:
  contents: read
  issues: write
  pull-requests: write



jobs:
  devsecops:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      # ---------- SCA: Skan zależności (npm audit)
      - name: Run SCA scan (npm audit)
        run: |
          if [ -f package.json ]; then
            npm install
            npm audit --audit-level=high || true
          fi
        continue-on-error: true

      # ---------- SAST: Skan kodu źródłowego (Semgrep)
      - name: Run SAST scan (Semgrep)
        uses: returntocorp/semgrep-action@v1
        with:
          config: "p/default"
        continue-on-error: true

      # ---------- Secrets Scan (GitLeaks)
      - name: Run Secrets scan (Gitleaks)
        uses: gitleaks/gitleaks-action@v2
        with:
          args: "--no-git -v"
        continue-on-error: true

      # ---------- Build Docker image (local)
      - name: Build Docker image
        run: docker build -t vulnapp:latest .

      # ---------- Run vulnerable app container
      - name: Run vulnerable app container
        run: |
          docker run -d -p 3000:3000 --name vulnapp vulnapp:latest
          sleep 15

      # ---------- Check if app is available
      - name: Check app availability
        run: curl -I http://localhost:3000 || exit 1
        continue-on-error: true



      # ---------- DAST: OWASP ZAP Scan
      - name: Run DAST scan (OWASP ZAP)
        run: |
          docker run --network=host -v $(pwd):/zap/wrk/:rw \
            owasp/zap2docker-stable zap-baseline.py \
            -t http://localhost:3000 -r zap_report.html || true

      - name: Upload ZAP report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: zap_report.html

      # ---------- Stop and clean up container
      - name: Stop and remove container
        run: |
          docker stop vulnapp
          docker rm vulnapp
