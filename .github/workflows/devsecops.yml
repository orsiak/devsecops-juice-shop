name: DevSecOps Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  devsecops:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      # ---------- SCA: Skan zależności (npm audit)
      - name: Run SCA scan (npm audit)
        run: |
          if [ -f package.json ]; then
            npm install
            npm audit --audit-level=high || true
          fi
        continue-on-error: true

      # ---------- SAST: Skan kodu źródłowego (Semgrep)
      - name: Run SAST scan (Semgrep)
        uses: returntocorp/semgrep-action@v1
        with:
          config: "p/default"
        continue-on-error: true

      # ---------- Secrets Scan (GitLeaks)
      - name: Run Secrets scan (Gitleaks)
        uses: gitleaks/gitleaks-action@v2
        with:
          args: "--no-git -v"
        continue-on-error: true

      # ---------- Sprawdź, czy podano nazwę użytkownika Docker Hub
      - name: Check Docker username
        run: |
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then
            echo "ERROR: DOCKER_USERNAME secret is not set."
            exit 1
          fi

      # ---------- Build Docker image
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/vulnerable-app:latest .
        continue-on-error: true

      # ---------- Run vulnerable app container
      - name: Run vulnerable app container
        run: |
          docker run -d -p 3000:3000 --name vulnapp ${{ secrets.DOCKER_USERNAME }}/vulnerable-app:latest || true
          sleep 15
        continue-on-error: true

      # ---------- Check if app is available
      - name: Check app availability
        run: curl -I http://localhost:3000 || true
        continue-on-error: true

      # ---------- DAST: OWASP ZAP Scan
      - name: Run DAST scan (OWASP ZAP)
        uses: zaproxy/action-full-scan@v0.9.0
        with:
          target: "http://localhost:3000"
        continue-on-error: true

      # ---------- Stop and clean up container
      - name: Stop and remove container
        run: |
          docker stop vulnapp || true
          docker rm vulnapp || true
        continue-on-error: true

      # ---------- Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        continue-on-error: true

      # ---------- Push image to Docker Hub
      - name: Push image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/vulnerable-app:latest || true
        continue-on-error: true
